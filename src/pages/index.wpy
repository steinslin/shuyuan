<template>
  <div class="page">
    <import src="../components/wxParse/wxParse.wxml"/>
    <div class="banner">
      <banner :list="bannerList" height="769"/>
    </div>
    <div class="container">
      <navigator url="/pages/notice" class="notice" hover-class="none">
        <image mode="widthFix" class="icon" src="../static/images/notice.png"/>
        <span class="text">{{noticeList.length>0?noticeList[0].noticeTitle:"暂无公告"}}</span>
        <image class="arrow-right" src="../static/images/arrow-right.png"/>
      </navigator>
      <div class="text-wrap">
        <div class="title">{{actPhotoName}}</div>
        <div class="content">
          <image class="activity-img" v-if="index <= 13" :src="item" v-for="(item, index) in actPhotoList" :key="index" @click="previewImage(item)"/>
          <image class="activity-img more" @click="showMore"/>
        </div>
      </div>
      <div class="text-wrap">
        <div class="title">书院档案</div>
        <div class="content">
          <wx-template is="wxParse" data="{{wxParseData:article.nodes}}"/>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
  import wepy from '@wepy/core'
  let WxParse = require('../components/wxParse/wxParse.js')
  wepy.page({
   data:{
     bannerList:[],
     actPhotoName:"",
     actPhotoList:[],
     noticeList:[],
     detail:""
   },
   methods:{
     previewImage (item) {
       wx.previewImage({
        current: item, // 当前显示图片的http链接
        urls: this.actPhotoList // 需要预览的图片http链接列表
      })
     },
     showMore () {
       wx.navigateTo({
         url:"/pages/activity/picture"
       })
     }
   },
   async onLoad () {
     let banner = await this.$apis.banner({})
     this.bannerList = banner.rows
     let actPhotoList= await this.$apis.actPhotoList({})
     try{
     this.actPhotoName = actPhotoList.rows[0].actName
     this.actPhotoList = actPhotoList.rows[0].imgs.split(",")
     }catch(err){}
     let noticeList = await this.$apis.noticeList({})
     this.noticeList = noticeList.rows
     let info = await this.$apis.agreementView({type:1})
     this.detail = info.agreement.context?info.agreement.context:"暂无数据"
     WxParse.wxParse('article', 'html', this.detail.replaceAll("<o:p>",""), this.$wx, 20)
   },
    async onPullDownRefresh () {
     this.$wx.onLoad()
     wx.stopPullDownRefresh()
   },
   onShareAppMessage (ops) {
    if (ops.from === 'button') {
      // 来自页面内转发按钮
      console.log(ops.target)
    }
    return {
      title: '一起来玩耍吧',
      path: '/pages/index',
      success: function (res) {
        // 转发成功
        console.log("转发成功:" + JSON.stringify(res));
      },
      fail: function (res) {
        // 转发失败
        console.log("转发失败:" + JSON.stringify(res));
      }
    }
  }
  });
</script>
<style lang="less" scoped>
@import "../static/style/common.less";
.banner{
  height:769rpx;
  background-color:#d6d6d6;
}
.notice{
  display: flex;
  align-items: center;
  width:689rpx;
  height:81rpx;
  background:rgba(170, 170, 170, 0.13);
  margin:54rpx auto 78rpx;
  border-radius: 8rpx;
  .icon{
    width: 68rpx;
    height: 68rpx;
    flex-shrink: 0;
    margin-left: 10rpx;
  }
  .text{
    margin-left: 42rpx;
    margin-right: 70rpx;
    color:#999999;
    font-size: 24rpx;
  }
  .arrow-right{
    width:26rpx;
    height:26rpx;
    margin-left: auto;
    margin-right: 20rpx;
    border-radius: 50%;
    flex-shrink: 0;
  }
}
.text-wrap{
  .title{
    color:#333333;
    font-size: 40rpx;
    padding-bottom: 20rpx;
    border-bottom:1px solid #B5B5B5;
  }
  .content{
    color:#666666;
    font-size: 28rpx;
    padding: 40rpx 0;
  }
}
.activity-img{
  display: inline-block;
  width:164rpx;
  height:164rpx;
  background-color:#999;
  margin-right: 10rpx;
  margin-bottom: 10rpx;
  &:nth-child(4n){
    margin-right:0;
  }
  &.more{
    position: relative;
    background:rgba(49, 49, 49, 0.93);
    &:before{
      position: absolute;
      top:50%;
      left:50%;
      content:"更多";
      color:#FFFFFF;
      font-size: 28rpx;
      transform: translate(-50%,-50%);
    }
  }
}
</style>
<wxs module="m1" lang="babel">
const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
}
module.exports.getTime = getTime;
</wxs>
<config>
{
    enablePullDownRefresh: true,
    "usingComponents": {
      "banner":"../components/banner"
    }
}
</config>
