<template>
  <div class="page">
    <my-calendar :calendar="calendar"/>
    <div class="hint">
      <span class="item">
        <span class="circle s2"></span>可报名或预约访校
      </span>
      <!-- <span class="item">
        <span class="circle s2"></span>可预约访校
      </span>
      <span class="item">
        <span class="circle s3"></span>可报名、预约访校
      </span> -->
    </div>
    <div class="tabs">
      <div class="item" :class="{on:tabIndex==index}" v-for="(item, index) in tabs" :key="index" @click="tabChange(index)">{{item}}</div>
    </div>
    <div class="list" v-if="tabIndex == 0">
      <block v-if="activityList.length > 0">
        <image class="school" :src="item.activityImg" v-for="(item, index) in activityList" :key="index" @click="appoint(item)"/>
      </block>
      <block v-else>
        <image mode="widthFix" class="no-data" src="../../static/images/no-data2.png"/>
      </block>
      <!-- <activity-item v-for="(item, index) in activityList" v-if="item.isPast == -1" :key="index" :obj="item" btnText="立即预约" :border="true"/> -->
    </div>
    <div class="list" v-if="tabIndex == 1">
      <block v-if="activityList.length > 0">
        <activity-item v-for="(item, index) in activityList" :key="index" :obj="item" btnText="立即报名" :border="true"/>
      </block>
      <block v-else>
        <image mode="widthFix" class="no-data" src="../../static/images/no-data.png"/>
      </block>
    </div>
  </div>
</template>
<script>
  import wepy from '@wepy/core'
  import initCalendar from '../../components/myCalendar/main.js';
  import { setTodoLabels, clearTodoLabels } from '../../components/myCalendar/main.js';
  wepy.page({
   data:{
     calendar:{},
     tabs:["预约访校","活动报名"],
     tabIndex:0,
     dateTime:"",
     activityList:[]
   },
   methods:{
     async tabChange (index) {
       this.tabIndex = index
       let activityList = await this.$apis.activityInfoList({
        //  activityType: this.navList[this.tabIndex].navType
        isPast:(this.tabIndex==0)?-1:1,
        startTime:this.dateTime || this.$dayjs().format("YYYY-MM-DD")
      })
      this.activityList = activityList.rows
     },
     renderCurMonthMark: async (_this, toMonth) => {
      clearTodoLabels()
      console.log(toMonth,"toMonth")
      let res = await _this.$apis.activityInfoDateList({
        date:toMonth,
      })
      if(res.code == 0){
        let list = res.rows,
        days = [],
        days2 = []
        list.forEach((item, index) => {
          let year = _this.$dayjs(item.startTime).year(),
          month = _this.$dayjs(item.startTime).month() + 1,
          day = _this.$dayjs(item.startTime).date()
          // if(item.isPast == -1){
          //   days.push({
          //     year,
          //     month,
          //     day
          //   })
          // }
          // if(item.isPast == 1){
          //   days2.push({
          //     year,
          //     month,
          //     day
          //   })
          // }
          days.push({
            year,
            month,
            day
          })
        })
        // 可预约、报名
        setTodoLabels({
          pos:'bottom',
          dotColor:'#3C8EB6',
          days,
        });
      }
    },
    appoint (item) {
      wx.navigateTo({
        url:`/pages/activity/appointment?activityid=${item.activityId}`
      })
      // wx.navigateTo({
      //   url:`/pages/activity/detail?activityid=${item.activityId}&ispast=${item.isPast}`
      // })
    }
   },
   async onLoad () {
     initCalendar({
      afterTapDay: async (selectedDate) => {
        console.log(selectedDate,"selectedDate")
        this.dateTime = `${selectedDate.year}-${selectedDate.month}-${selectedDate.day}`
        let activityList = await this.$apis.activityInfoList({
          //  activityType: this.navList[this.tabIndex].navType
          isPast:(this.tabIndex==0)?-1:1,
          startTime:this.dateTime
        })
        this.activityList = activityList.rows
      },
      afterCalendarRender: async () => {
        this.renderCurMonthMark(this, this.$dayjs().format("YYYY-MM-01"))
      },
      whenChangeMonth: async (beforeDate, curDate) => {
        console.log(curDate)
        this.renderCurMonthMark(this, `${curDate.year}-${curDate.month}-01`)
      }
    });
    let activityList = await this.$apis.activityInfoList({
      //  activityType: this.navList[this.tabIndex].navType
      isPast:(this.tabIndex==0)?-1:1,
      startTime:this.$dayjs().format("YYYY-MM-DD")
    })
    this.activityList = activityList.rows
   },
   async onPullDownRefresh () {
     this.$wx.onLoad()
     this.renderCurMonthMark(this, this.$dayjs().format("YYYY-MM-01"))
     wx.stopPullDownRefresh()
   },
   onShareAppMessage (ops) {
    if (ops.from === 'button') {
      // 来自页面内转发按钮
      console.log(ops.target)
    }
    return {
      title: '',
      path: '/pages/school/index',
      success: function (res) {
        // 转发成功
        console.log("转发成功:" + JSON.stringify(res));
      },
      fail: function (res) {
        // 转发失败
        console.log("转发失败:" + JSON.stringify(res));
      }
    }
  }
  });
</script>
<style lang="less">
@import "../../static/style/common.less";
.hint{
  padding: 0 30rpx 20rpx;
  .item{
    color:#666666;
    font-size: 20rpx;
    margin-right: 40rpx;
    .circle{
      display: inline-block;
      width:10rpx;
      height:10rpx;
      background-color:red;
      border-radius: 50%;
      vertical-align: 4rpx;
      margin-right: 10rpx;
      &.s1{
        background-color:#F1914A;
      }
      &.s2{
        background-color:#3C8EB6;
      }
      &.s3{
        background-color:red;
      }
    }
  }
}
.tabs{
  display: flex;
  height:80rpx;
  line-height: 80rpx;
  border-top:1px solid #DCDCDC;
  box-shadow: 1rpx 6rpx 13rpx 0rpx rgba(48, 48, 48, 0.08);
  .item{
    flex:1;
    color:#999999;
    text-align: center;
    font-size: 28rpx;
    &.on{
      color: #3B8DB5;
      border-bottom:5rpx solid #3B8DB5;
    }
  }
}
.list{
  padding-top: 28rpx;
}
.school{
  display:block;
  width:690rpx;
  height:290rpx;
  margin: 0 auto;
  border-radius: 12rpx;
  overflow: hidden;
}
.no-data{
  display: block;
  width:690rpx;
  margin:0 auto;
}
</style>
<wxs module="m1" lang="babel">
const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
}
module.exports.getTime = getTime;
</wxs>
<config>
{
    enablePullDownRefresh: true,
    "usingComponents": {
      "activity-item": "../../components/activityItem",
      "my-calendar":"../../components/myCalendar"
    }
}
</config>
