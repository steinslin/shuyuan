<template>
  <div class="page">
    <image class="show" mode="widthFix" src="../../static/images/question.png"/>
    <block v-if="question.length > 0">
    <div class="panel" v-for="(item, idex) in question" :key="idex">
      <block v-if="item.type == 'radio'">
        <div class="head">
          <span class="title">{{item.key}}</span>
          <!-- <span class="status fr">{{item.type=="radio"}}</span> -->
        </div>
        <div class="content">
          <div class="check-wrap" @click.stop="radioCheck(item, idex, idx)" v-for="(itm, idx) in item.list" :key="idx">
            <div class="item">
              <div class="circle" :class="{on:item.index == idx}"></div>
              <div class="text">{{itm}}</div>
            </div>
          </div>
        </div>
      </block>
      <block v-if="item.type == 'check'">
        <div class="head">
          <span class="title">{{item.key}}</span>
          <!-- <span class="status fr">{{item.type=="radio"}}</span> -->
        </div>
        <div class="content">
          <div class="check-wrap" @click.stop="check(item, idex, idx)" v-for="(itm, idx) in item.list" :key="idx">
            <div class="item">
              <div class="circle" :class="{on:itm.checked}"></div>
              <div class="text">{{itm.text}}</div>
            </div>
          </div>
        </div>
      </block>
      <block v-if="item.type == 'textarea'">
        <div class="head">
          <span class="title">{{item.key}}</span>
          <!-- <span class="status fr">单选</span> -->
        </div>
        <div class="content">
          <textarea class="advice" v-model="item.value"/>
        </div>
      </block>
    </div>
    <div class="submit" @click="submit">提交问卷</div>
    </block>
    <block v-else>后台暂未设定问卷调查!</block>
  </div>
</template>
<script>
  import wepy from '@wepy/core'
  wepy.page({
   data:{
     param:{},
     question:[]
   },
   methods:{
     radioCheck (item, index, idx) {
      console.log(this.question[index])
      // console.log(index, idx,this.question[index].key)
      this.$set(this.question[index],'index',idx)
      this.$set(this.question[index],'value',this.question[index].list[idx])
      // this.question[index].index = idx
      // this.question[index].value = this.question[index].list[idx]
     },
     check (item, index, idx) {
       console.log(this.question[index]['list'][idx]['checked'])
       this.$set(this.question[index]['list'][idx],'checked',!this.question[index]['list'][idx]['checked'])
       let arr = this.question[index]['list'].filter((itm) => {
         return itm.checked == true
       }).map((itm) => {
         return itm.text
       })
       this.$set(this.question[index],'value',arr.join(","))
     },
     async submit () {
       let feedBackAdd = await this.$apis.feedBackAdd({
         feedBack: JSON.stringify(this.question),
         orderId: this.param.orderId
       })
       if(feedBackAdd.code == 0){
         this.$showToast("提交成功")
         setTimeout(() => {
          wx.navigateBack()
         },2000)
       }else{
         this.$showToast(feedBackAdd.msg)
       }
     }
   },
   async onLoad (param) {
     this.param = param || this.param
     let detail = await this.$apis.activityInfoSel(this.param.activityId)
     this.question = JSON.parse(detail.activityInfo.feedBackJson)
   },
   async onPullDownRefresh () {
     this.$wx.onLoad()
     wx.stopPullDownRefresh()
   },
  });
</script>
<style lang="less" scoped>
@import "../../static/style/common.less";
page{
  background-color:#F8F8F8;
}
.show{
  width:100%;
}
.panel{
  width:690rpx;
  margin:30rpx auto;
  padding: 20rpx 20rpx 0;
  background-color:#fff;
  color:#333333;
  box-sizing: border-box;
  .head{
    font-size: 30rpx;
    .title{}
    .status{
      color:#3B8DB5;
      font-size: 28rpx;
    }
  }
}
.check-wrap{
  .item{
    height:80rpx;
    line-height: 80rpx;
    font-size: 24rpx;
    border-bottom: 1px solid #F1F1F1;
    &:last-child{
      border-bottom: 0;
    }
    .circle{
      display: inline-block;
      vertical-align: -4rpx;
      width:24rpx;
      height:24rpx;
      border-radius: 50%;
      border:1px solid #999999;
      &.on{
        position: relative;
        border:1px solid #3B8DB5;
        &:before{
          content: "";
          position: absolute;
          top: 4rpx;
          left: 4rpx;
          width: 16rpx;
          height: 16rpx;
          background-color: #3B8DB5;
          border-radius: 50%;
        }
      }
    }
    .text{
      display: inline-block;
      padding-left: 20rpx;
    }
  }
}
.advice{
  width:650rpx;
  height:280rpx;
  font-size: 24rpx;
  padding: 20rpx;
  box-sizing: border-box;
  margin: 20rpx 0;
  background-color:#F1F1F1;
  border-radius: 8rpx;
}
.submit{
  width: 350rpx;
  height: 88rpx;
  margin: 0 auto 40rpx;
  text-align: center;
  line-height: 88rpx;
  color:#fff;
  background: #3B8DB5;
  box-shadow: 0px 20px 25px 0px rgba(59, 141, 181, 0.4);
  border-radius: 44px;
}
</style>
<wxs module="m1" lang="babel">
const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
}
module.exports.getTime = getTime;
</wxs>
<config>
{
    "enablePullDownRefresh": true,
    "navigationBarTitleText":"问卷调查",
    "usingComponents": {
      
    }
}
</config>
